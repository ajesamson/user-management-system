security:
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    internations:
                        password: $2y$12$UIAJhny3yhizj1XPm.5x7.p7w2c0nyUbYiOdQyUL6gCLGgxsg6hAi
                        roles: 'ROLE_USER'
                    admin:
                        password: $2y$12$1AFZ1RMaYGMqf9jxyv6x9u3syRglR5pDV0zRZPeFOdad10dGGFa96
                        roles: 'ROLE_ADMIN'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: ROLE_ADMIN }
        - { path: ^/users,     roles: ROLE_ADMIN }
        - { path: ^/groups,    roles: ROLE_ADMIN }
        - { path: ^/,          roles: IS_AUTHENTICATED_ANONYMOUSLY }
